<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nix.good.dao.MemberMapper">
    <resultMap id="BaseResultMap" type="com.nix.good.model.MemberModel">
        <id property="id" column="id"  jdbcType="INTEGER"/>
        <result property="memberId" column="memberId" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="BIT"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
    </resultMap>
    <select id="login" resultMap="BaseResultMap">
        SELECT * FROM `member` AS m WHERE m.memberId=#{memberId,jdbcType=VARCHAR} AND m.password=#{password,jdbcType=VARCHAR}
    </select>
    <select id="select" resultMap="BaseResultMap">
        SELECT * FROM `member` WHERE id=#{id}
    </select>
    <select id="list" resultMap="BaseResultMap">
        select * from `member`
        <if test="conditions != null">
            where ${conditions}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != -1 and limit != -1">
            limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </select>

    <select id="delete" parameterType="java.lang.Integer">
        delete  from `member` where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.nix.good.model.MemberModel">
        insert into `member`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                `memberId`,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="role != null">
                `role`,
            </if>
            <if test="sex != null">
                `sex`,
            </if>
            <if test="age != null">
                `age`,
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BIT},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.nix.good.model.MemberModel">
        UPDATE `member`
        SET
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                `sex` = #{sex,jdbcType=BIT},
            </if>
            <if test="age != null">
                `age` = #{age,jdbcType=INTEGER},
            </if>
        </trim>
        WHERE id = #{id}
    </update>
    <select id="selectRoleLazyCustomer" parameterType="java.lang.String" resultType="com.nix.good.model.MemberModel">
        SELECT m.* from `member` AS m where m.memberId = #{customer,jdbcType=VARCHAR}
    </select>
    <select id="selectRoleLazyAdmin" parameterType="java.lang.String" resultType="com.nix.good.model.MemberModel">
        SELECT m.* from `member` AS m where m.memberId = #{admin,jdbcType=VARCHAR}
    </select>
</mapper>
